<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="generator" content="localguide.com">
	<meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1">
	<meta name="description" content="">
	<title>Signup - Create guide</title>
	{% include "../common/header_not_login.jinja2" %}
</head>

<body>
    <div class="form-container">
		<div class="text-center mb-4" style="padding-top:100px;">
			<h1 class="h1 mb-3 font-weight-bold">LocalGuide</h1>
			<p class="text-center display-5">Signup to become a guide</p>
		</div>	
		<form id="signupForm" @submit.prevent="processForm">
			<div v-if="success==true">	
				<b-alert :show="dismissCountDown" dismissible variant="success" @dismissed="dismissCountDown=0" @dismiss-count-down="countDownChanged">
					<b>Thanks for your registration</b><br/>
					Please check your email to verification your account<br/>
					<b-progress variant="warning" :max="dismissSecs" :value="dismissCountDown" height="6px"></b-progress>
				</b-alert>
			</div>
        	<div v-if="success==false">
				<div class="is-error">${message}</div>
				<div class="form-group">
					<label>Full name</label>
					<input type="text" name="fullname" v-validate="'required|min:6'" v-model="user.fullname" class="form-control" placeholder="Full name"  autofocus="" autocapitalize="off" autocorrect="off" maxlength="80">
					<span v-show="errors.has('fullname')" class="is-error">${errors.first('fullname')}</span>
				</div>
				
				<div class="form-group">
					<label>Email address</label>
					<input type="email" name="email" v-validate="'required|email'" v-model="user.email" class="form-control" placeholder="Email address" autocapitalize="off" autocorrect="off" maxlength="80">
					<span v-show="errors.has('email')" class="is-error">${errors.first('email')}</span>
				</div>
				
				<div class="form-group">
					<label>Password</label>
					<input type="password" name="password" v-validate="'required|min:8'" v-model="user.password" class="form-control" placeholder="Password" autocapitalize="off" autocorrect="off" maxlength="20">
					<span v-show="errors.has('password')" class="is-error">${errors.first('password')}</span>
				</div>
				
				<div class="form-group" v-if="success==false">
					<input type="submit" id="button" :disabled="errors.any()" v-if="status=='create'" class="btn btn-warning btn-lg btn-block " value="SIGN UP"> 
					<input type="button" v-else="status=='waiting'" class="btn btn-warning btn-lg btn-block " value="Please wait..."> 
				</div>
				<p class="text-center small text-dark">By signing up, you agree to our <a href="#" data-toggle="modal" data-target="#term_of_servicetModal">Terms of Service</a></p>
				<hr>
				<p class="text-center">Already have an account ? <a href="../auth/login">Login</a></p>
			</div>
		</form>

		<div class="text-center display-5 font-weight-normal">
			<a href="/">HOME</a> | ABOUT US | FAQ's | CONTACT
		</div>
	</div>
</section>

{% include "../common/term_of_service_modal.jinja2" %}
{% include "../common/footer_not_login.jinja2" %}


<script>
	// Notify vue about the VeeValidate plugin
 	Vue.use(VeeValidate);
	Vue.use(bootstrapVue);	

	const signupForm = new Vue({
		delimiters: ['${', '}'],
        el: '#signupForm',
        data: {
			status: 'create',
			dismissSecs: 5,
        	dismissCountDown: 0,
        	showDismissibleAlert: false,
			success: false,
			message: '',
			user: {
				fullname:'',
				email: '',
            	password: ''
			},
        },		
        methods: {
			processForm() {
        		//evt.preventDefault()
				//attempt validating all
                this.$validator.validateAll().then((result) => {
                    if (result) {
						this.status = 'waiting';
						//validation passed succesfully
						axios({
							method: 'POST',
							url: URL + 'user/create',
							data: this.user,
							config: { headers: {'Content-Type': 'application/json; charset=utf-8' }}
						})
						.then( (response) => {
							this.status = 'create';
							//handle success
							if (response.status == '200' && response.statusText == 'OK') {
								if(response.data == 'NG') {
									this.message = 'Email have been exist. Please create with other email!'
								} else {
									this.success = true;
									signupForm.showAlert()									
								}
							}
						})
						.catch( (response) => {
							//handle error
						});
                    }
                });
            },
			countDownChanged(dismissCountDown) {
        		this.dismissCountDown = dismissCountDown
				if (this.dismissCountDown == 0) {
					this.success = false;
					location.href = '../auth/login'
				}
      		},
      		showAlert() {
        		this.dismissCountDown = this.dismissSecs
      		},
        }	
    }); 
</script>

</body>
</html>
