<!DOCTYPE html>
<html >
<head>
    {% include "../common/header.jinja2" %}
    <title>User setting</title>

	<!-- Quill start -->
	<script src="https://cdn.quilljs.com/1.3.4/quill.js"></script>
	<!--<script src="https:////cdn.quilljs.com/1.3.6/quill.min.js"></script>-->
	<!-- Quill JS Vue -->
	<script src="https://cdn.jsdelivr.net/npm/vue-quill-editor@3.0.4/dist/vue-quill-editor.js"></script>
	<!-- Include stylesheet -->
	<link href="https://cdn.quilljs.com/1.3.4/quill.core.css" rel="stylesheet">
	<!-- Theme -->
	<link href="https://cdn.quilljs.com/1.3.4/quill.snow.css" rel="stylesheet">
	<!--<link href="https://cdn.quilljs.com/1.3.4/quill.bubble.css" rel="stylesheet">-->
	<!-- Quill end -->
	<link rel="stylesheet" href="{{request.static_url('localguide:static/assets/theme/css/sidebar.css')}}">
	
</head>
<body>
{% include "../common/navbar_default.jinja2" %}

{% if role == '2' :%}
	<div class="container-full" style="padding-top:150px; padding-bottom:200px">
{% else :%}
	<div class="container" style="padding-top:150px; padding-bottom:200px">
{% endif %}

	<div class="row">
		{% if role == '2' %}
        	<div class="col-md-2">
				{% include "../common/sidebar.jinja2" %}
			</div>
		{% elif (role == '1') %}
			<div class="col-md-3">
				{% include "../common/sidebar.jinja2" %}
			</div>
		{% elif (role == '0') %}
			<div class="col-md-3">
				{% include "../common/sidebar.jinja2" %}
			</div>
		{% endif %}
		
		{% if role == '2' %}
			<div class="col-md-10">
		{% elif (role == '1')%}
			<div class="col-md-9">
		{% elif (role == '0')%}	
			<div class="col-md-9">	
		{% endif %}
			{% block content %}{% endblock %}
			</div>
			
	</div>
</div>

{% include "../common/footer.jinja2" %}
<script src="{{request.static_url('localguide:static/assets/js/common.js')}}"></script>
<script type="text/javascript">
	//Vue.use(VeeValidate);
	//Vue.use(bootstrapVue);
	Vue.use(VueQuillEditor);
	
	/* Update Advance info*/
	const advanceInfo = new Vue({
		el: '#advanceInfo',		
		data: {
			isEditing: false,
			user: {
				uid:'',
				skill:"",
				specialities: "",
				education: "",
				language: "",
				hobby: "",
				education: "",
				experience: '{{user.experience|safe}}',	
			},
			editorOption: {
				syntax: true,
				placeholder: 'Please update your content',
				theme: 'snow',
				modules: {
					toolbar: {
						container: [
							[{ 'header': [1, 2, 3, 4, 5, 6, false] }],
							['bold', 'italic', 'underline', 'strike'],
							[{ 'color': [] }, { 'background': [] }], 
							[{ 'align': [] }],
							[{ 'list': 'ordered' }, { 'list': 'bullet' }],
							['link', 'video'],
							['blockquote'],
							['clean']  
						],
					},
				},
			},
		},
		created() {	
		},
		components: {
			LocalQuillEditor: VueQuillEditor.quillEditor
		},
		methods: {
			processForm(evt) {
				this.isEditing = !this.isEditing;
				// Prevent modal from closing
				evt.preventDefault()
				//this.user.uid = this.$refs['uid'].value;
				this.user.skill			 = this.$refs['skill'].value;
				this.user.specialities	 = this.$refs['specialities'].value;
				this.user.education 	 = this.$refs['education'].value;
				this.user.language		 = this.$refs['language'].value;
				this.user.hobby			 = this.$refs['hobby'].value;
				this.user.experience	 = this.$refs['experience'].value;
				
				axios({
					method: 'POST',
					url: URL + 'user/updateAdvanceInfo',
					data: this.user,
					config: { headers: {'Content-Type': 'application/json; charset=utf-8' }}
				})
				.then(function (response) {
					//handle success
					if (response.status == '200' && response.statusText == 'OK') {
						//basicModal.hideModal()
						location.reload();
					}
				})
				.catch(function (response) {
					//handle error
					console.log(response);
				});
			},
		}	
	});

	/* Experience */
	/*
	const experienceEditor = new Vue({
        el: '#experienceEditor',
        data: {
			isEditing: false,
			user: {
				uid:'',
				experience:'{{user.experience|safe}}',
			},
			editorOption: {
				syntax: true,
				placeholder: 'Please update your experience',
				theme: 'snow',
				modules: {
					imageResize: {
          				displaySize: true
        			},
					toolbar: {
						container: [
							[{ 'header': [1, 2, 3, 4, 5, 6, false] }],
							['bold', 'italic', 'underline', 'strike'],
							[{ 'color': [] }, { 'background': [] }], 
							[{ 'align': [] }],
							[{ 'list': 'ordered' }, { 'list': 'bullet' }],
							['link', 'image', 'video'],
							['blockquote'],
							['clean']  
						],
						handlers: {
							image: imageHandler
						}
					},
				},
			},
		},
		components: {
			LocalQuillEditor: VueQuillEditor.quillEditor
		},
		methods: {
			save(evt) {
				this.isEditing = !this.isEditing;
				// Prevent modal from closing
				evt.preventDefault()
				//this.user.uid = this.$refs['uid'].value;
				this.user.experience = this.$refs['expEditor'].value;

				axios({
					method: 'POST',
					url: URL + 'user/updateExperience',
					data: this.user,
					config: { headers: {'Content-Type': 'application/json; charset=utf-8' }}
				})
				.then(function (response) {
					//handle success
					if (response.status == '200' && response.statusText == 'OK') {
						//alert("UPDATE Experience SUCCESS")
						location.reload() 
					}
				})
				.catch(function (response) {
					//handle error
					console.log(response);
				});
			}
		},
    });
	*/

	/* Work history */
	/*
	const workhistoryEditor = new Vue({
        el: '#workhistoryEditor',
        data: {
			isEditing: false,
			user: {
				uid:'',
				work_history:'{{user.work_history|safe}}',
			},
			editorOption: {
				syntax: true,
				placeholder: 'Please update your working history',
				theme: 'snow',
				modules: {
					imageResize: {
          				displaySize: true
        			},
					toolbar: {
						container: [
							[{ 'header': [1, 2, 3, 4, 5, 6, false] }],
							['bold', 'italic', 'underline', 'strike'],
							[{ 'color': [] }, { 'background': [] }], 
							[{ 'align': [] }],
							[{ 'list': 'ordered' }, { 'list': 'bullet' }],
							['link', 'image', 'video'],
							['blockquote'],
							['clean']  
						],
						handlers: {
							image: imageHandler
						}
					},
				},
			},
		},
		components: {
			LocalQuillEditor: VueQuillEditor.quillEditor
		},
		methods: {
			save(evt) {
				this.isEditing = !this.isEditing;
				// Prevent modal from closing
				evt.preventDefault()
				this.user.work_history = this.$refs['workEditor'].value;

				axios({
					method: 'POST',
					url: URL + 'user/updateWorkHistory',
					data: this.user,
					config: { headers: {'Content-Type': 'application/json; charset=utf-8' }}
				})
				.then(function (response) {
					//handle success
					if (response.status == '200' && response.statusText == 'OK') {
						//alert("UPDATE Work history SUCCESS")
						location.reload() 
					}
				})
				.catch(function (response) {
					//handle error
					console.log(response);
				});
			}
		}
    });
	*/

</script>
</body>
</html>