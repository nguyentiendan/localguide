<!DOCTYPE html>
<html>
<head>
    {% include "../common/header.jinja2" %}
    <title>User setting</title>
	<link rel="stylesheet" href="{{request.static_url('localguide:static/assets/theme/css/sidebar.css')}}">
</head>
<body>
{% include "../common/navbar_default.jinja2" %}

{% if role == '2' :%}
	<div class="container-full" style="padding-top:150px; padding-bottom:200px">
{% else :%}
	<div class="container" style="padding-top:150px; padding-bottom:200px">
{% endif %}

	<div class="row">
		{% if role == '2' %}
        	<div class="col-md-2">
				{% include "../common/sidebar.jinja2" %}
			</div>
		{% elif (role == '1') %}
			<div class="col-md-3">
				{% include "../common/sidebar.jinja2" %}
			</div>
		{% elif (role == '0') %}
			<div class="col-md-3">
				{% include "../common/sidebar.jinja2" %}
			</div>
		{% endif %}
		
		{% if role == '2' %}
			<div class="col-md-10">
		{% elif (role == '1')%}
			<div class="col-md-9">
		{% elif (role == '0')%}	
			<div class="col-md-9">	
		{% endif %}
			{% block content %}{% endblock %}
			</div>
			
	</div>
</div>

{% include "../common/footer.jinja2" %}
<script src="{{request.static_url('localguide:static/assets/js/common.js')}}"></script>
<script type="text/javascript">
	/* Update basic info*/
	const basicInfo = new Vue({
		delimiters: ['${', '}'],
		el: '#basicInfo',
		data: {
			isEditing: false,
			uploadfile: '',
			country: '{{user.country}}',
			//city: '{{user.city}}',
			countries: [],
			count_city:'',
			cityData: {
				Japan: [
					{ name: 'Tokyo', value: 'Tokyo' },
					{ name: 'Osaka', value: 'Osaka' },
					{ name: 'Nagoya', value: 'Nagoya' },
					{ name: 'Kyoto', value: 'Kyoto' },
					{ name: 'Hiroshima', value: 'Hiroshima' },
					{ name: 'Hokkaido', value: 'Hokkaido' },
				],
				VietNam: [
					{ name: 'SaiGon', value: 'SaiGon' },
					{ name: 'DaNang', value: 'DaNang' },
				]
			},
			user: {
				uid:'',
				fullname:"",
				job: "",
				mobile: "",
				country: "",
				city: "{{user.city}}",
				age: "",
				sex: "{{user.sex}}",
			},
		},
		created() {
			this.getCountry()
			if (this.city != 'None' || this.city != '')
				this.count_city = 1		
		},
		computed: {
			options: function() {
				let options = ''
				switch(this.country) {
					case 'Japan':
						options = this.cityData.Japan
						break;                    
					case 'VietNam':
						options = this.cityData.VietNam
						break;
					//default:
					//	options = this.cityData.Japan
				}
				return options
			}
		},
		methods: {
			getCountry() {
				axios.get(URL + 'static/js/country.json').then(response => {
					this.countries = response.data
				})
			},
			onChange: function () {
				this.options = this.options
				this.count_city = this.options.length
			},
			processForm(evt) {
				this.isEditing = !this.isEditing;
				// Prevent modal from closing
				evt.preventDefault()
				//this.user.uid = this.$refs['uid'].value;
				this.user.fullname	= this.$refs['fullname'].value;
				this.user.job		= this.$refs['job'].value;
				this.user.mobile 	= this.$refs['mobile'].value;
				this.user.age 		= this.$refs['age'].value;
				this.user.sex 		= this.$refs['sex'].value;
				this.user.country	= this.country;
				this.user.city 		= this.$refs['city'].value;;
				axios({
					method: 'POST',
					url: URL + 'user/updateBasicInfo',
					data: this.user,
					config: { headers: {'Content-Type': 'application/json; charset=utf-8' }}
				})
				.then(function (response) {
					//handle success
					if (response.status == '200' && response.statusText == 'OK') {
						location.reload();
					}
				})
				.catch(function (response) {
					//handle error
					console.log(response);
				});
			},
			file_open () {
				this.$refs.file.click()
			},
			filesChange(e) {
				e.preventDefault();
				//let file_name = this.$refs.file.files[0].name;
				//let file_size = this.$refs.file.files[0].size;
				if(!this.validate_img(this.$refs.file.files[0])) {
					//alert('File size too large or not image file')	
					return;
				} else {
					this.uploadfile = this.$refs.file.files[0]
					
					//let formData = new FormData();
					//formData.append('file', this.uploadfile);
					//console.log('>> formData >> ', formData);
					let formData = new FormData();
					formData.append('photo', this.uploadfile);
					console.log('>> formData >> ', formData);

					axios({
						method: 'POST',
						url: URL + 'user/uploadImage',
						data: formData, 
						headers: {'Content-Type': 'multipart/form-data'} 
					})
					.then(function (response) {
						//handle success
						if (response.status == '200' && response.statusText == 'OK') {
							location.reload();
							location.reload(); 
						}
					})
					.catch(function (response) {
						//handle error
						console.log(response);
					});
				}
			},	
			validate_img (f) {
				if (f.name == '') {
					alert('No file chosen');
					return false;
				} else if (! /\.(jpg|jpeg|png|gif)$/i.test(f.name)) {
					alert('Please choose image');
					return false;
				} else if (f.size > 1024 * 1024) {
					alert('File too big (> 1MB)');
					return false;
				}
				return true
			}    
		}	
	});

</script>
</body>
</html>